name: Solidity
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Clone foundry
        uses: actions/checkout@v3
        with:
          repository: Sunscreen-tech/foundry
          path: foundry

      - name: Get foundry hash
        id: foundry-hash
        working-directory: foundry
        run: |
          echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache - restore forge binary
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: ~/.cargo/bin/forge
          key: ${{ runner.os }}-${{ steps.foundry-hash.outputs.hash }}-forge

      - name: Install forge
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cargo install --path ./foundry/crates/forge --profile local --force --locked

      - name: Cache - save forge binary
        uses: actions/cache/save@v3
        if: always()
        with:
          path: ~/.cargo/bin/forge
          key: ${{ runner.os }}-${{ steps.foundry-hash.outputs.hash }}-forge

      - name: Install deps
        working-directory: contracts
        run: forge install

      - name: Run forge tests
        working-directory: contracts
        run: forge test

  bindings:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Clone foundry
        uses: actions/checkout@v3
        with:
          repository: Sunscreen-tech/foundry
          path: foundry

      - name: Get foundry hash
        id: foundry-hash
        working-directory: foundry
        run: |
          echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache - restore forge binary
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: ~/.cargo/bin/forge
          key: ${{ runner.os }}-${{ steps.foundry-hash.outputs.hash }}-forge

      - name: Install forge
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cargo install --path ./foundry/crates/forge --profile local --force --locked

      - name: Cache - save forge binary
        uses: actions/cache/save@v3
        if: always()
        with:
          path: ~/.cargo/bin/forge
          key: ${{ runner.os }}-${{ steps.foundry-hash.outputs.hash }}-forge

      - name: Pull library deps
        working-directory: contracts
        run: forge install

      - name: Check fmt
        working-directory: contracts
        run: forge fmt --check

      - name: Build contracts before checking bindings are correct
        working-directory: contracts
        run: forge build --sizes

      - name: Check bindings are correct
        run: forge bind --bindings-path ./bindings --root ./contracts --crate-name bindings
